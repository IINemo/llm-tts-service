name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
          python-version: '3.10'
    - name: Cache Python environment
      uses: actions/cache@v4
      id: cache-env
      with:
        path: |
          ~/.cache/pip
          ${{ env.pythonLocation }}
          lm-polygraph
        key: ${{ runner.os }}-python-3.10-${{ hashFiles('setup.py', 'setup.sh', 'lm-polygraph/**') }}
        restore-keys: |
          ${{ runner.os }}-python-3.10-
    - name: Install dependencies
      if: steps.cache-env.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov hydra-core==1.3.2
        pip install .
    - name: Run setup.sh
      if: steps.cache-env.outputs.cache-hit != 'true'
      run: |
        ./setup.sh
    - name: Validate strategy registry
      run: |
        python tests/strategy_registry.py --validate

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
          python-version: '3.10'
    - name: Cache Python environment
      uses: actions/cache@v4
      id: cache-env
      with:
        path: |
          ~/.cache/pip
          ${{ env.pythonLocation }}
          lm-polygraph
        key: ${{ runner.os }}-python-3.10-${{ hashFiles('setup.py', 'setup.sh', 'lm-polygraph/**') }}
        restore-keys: |
          ${{ runner.os }}-python-3.10-
    - name: Install dependencies
      if: steps.cache-env.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov hydra-core==1.3.2
        pip install .
    - name: Run setup.sh
      if: steps.cache-env.outputs.cache-hit != 'true'
      run: |
        ./setup.sh
    - name: Test with pytest (all strategies)
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      run: |
        pytest tests/ -v
