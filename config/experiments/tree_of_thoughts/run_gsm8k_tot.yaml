# @package _global_

# Tree-of-Thoughts Configuration for GSM8K
# Explores multiple reasoning paths via beam search with state evaluation

defaults:
  - /config  # Load main Hydra config
  - /dataset/gsm8k
  - /model/openrouter
  - /strategy/tree_of_thoughts
  - /generation/default
  - /system/default
  - _self_

# Run naming for descriptive outputs
run_name: "gsm8k_tot_gpt4_beam${strategy.beam_width}_${now:%H-%M-%S}"

# Main configuration
verbose: false
report_to: wandb  # Enable wandb logging (optional)
wandb_project: llm-tts-eval-tot  # Wandb project name for ToT experiments

# Model configuration (API-based)
# Using GPT-4 to match original ToT paper (Yao et al., 2023)
model:
  provider: openrouter
  model_name: "openai/gpt-4"
  api_key: null  # Set via OPENROUTER_API_KEY env var

# Generation settings (match paper)
generation:
  max_new_tokens: 1000      # Paper: 1000 tokens
  temperature: 0.7          # Paper: 0.7
  top_p: 1.0
  batch_size: 1

# ToT strategy (no scorer needed - uses internal state evaluation)
scorer: null

# Tree-of-Thoughts strategy configuration
# Parameters match original ToT paper (Yao et al., 2023)
strategy:
  type: tree_of_thoughts
  method_generate: propose  # Paper: "propose" for step-by-step generation
  method_evaluate: value    # Paper: "value" for state scoring
  # All other parameters inherited from base config (strategy/tree_of_thoughts.yaml)
  # which now matches the paper: n_evaluate_sample=3, temperature=0.7, etc.

# Evaluation configuration
# Using GPT-4 for final answer evaluation (match paper)
evaluation:
  evaluators:
    - llm_judge
  llm_judge:
    provider: openrouter
    base_url: https://openrouter.ai/api/v1
    model: openai/gpt-4  # Match paper: GPT-4 for everything
    cache_path: ~/.cache
    n_threads: 1
    prompt_file: null

# Dataset settings
dataset:
  subset: 10  # Number of examples to evaluate
